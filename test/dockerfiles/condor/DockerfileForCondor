FROM centos:latest
ENV container docker

RUN yum update -y && yum install -y which gcc bzip2 wget \
&& wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh \
&& bash ~/miniconda.sh -b -p $HOME/miniconda \
&& export PATH="$HOME/miniconda/bin:$PATH"

ENV PATH /root/miniconda/bin:$PATH


RUN wget https://research.cs.wisc.edu/htcondor/yum/RPM-GPG-KEY-HTCondor; rpm --import RPM-GPG-KEY-HTCondor;
RUN cd /etc/yum.repos.d && rm -rf *htcondor* \
    && wget https://research.cs.wisc.edu/htcondor/yum/repo.d/htcondor-stable-rhel7.repo \
    && wget https://research.cs.wisc.edu/htcondor/yum/repo.d/htcondor-development-rhel7.repo \
    && yum update; yum install -y minicondor

RUN yum install -y sudo passwd openssh-server openssh-clients git
RUN git clone https://github.com/matyasselmeci/condorflask.git

COPY requirements.txt requirements.txt
COPY start_condor.sh /start_condor.sh
COPY start_condor_dummy.sh /start_condor_dummy.sh

RUN pip install -r requirements.txt
RUN echo "root:root" | chpasswd
RUN useradd kbase && echo "kbase:kbase" | chpasswd

ENTRYPOINT ["/start_condor.sh"]

#CMD ["/usr/sbin/init"]
CMD [""]

# docker build -f Dockerfile . -t kbase/ee2:local_condor
# docker push kbase/ee2:local_condor
# docker run -ti -d --privileged=true -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /Users:/Users -p 22:22 --net=my_bridge ee2:local_condor
# docker run -ti -d  --net=my_bridge mongo:2.7
# docker network connect my_bridge 51ef0e863717
